# doc/views_dt.py
# Doc views for basic operations


#############################################################################
# DO NOT EDIT THIS FILE
# This Code will be replaced by the code generator
#############################################################################

from django.views.generic import ListView, DetailView
from django.views.generic.edit import CreateView, UpdateView, DeleteView
from django.core.urlresolvers import reverse_lazy
from django.contrib.auth.decorators import login_required

from doc_model import Doc
from doc_query import query_doc, get_doc


# Basic list view with using a template
class DocList(ListView):
    model = Doc
    template_name = 'doc_list.html'

    # Filter the list of choices
    queryset = query_doc()

    # Use the request user to match the items
    #def get_queryset(self):
    #    return Doc.objects.filter(name=self.request.user.username)


# Basic detail view
class DocDetail(DetailView):
    model = Doc
    template_name = 'doc_detail.html'

    # Call the base implementation first to get a context
    def get_context_data(self, **kwargs):
        context = super(DocDetail, self).get_context_data(**kwargs)
        id = context['object'].pk
        context['value_list'] = get_doc(self.request.user,id)
        return context


# Create view
class DocAdd(CreateView):
    model = Doc
    template_name = 'doc_edit.html'


# Update view
class DocEdit(UpdateView):
    model = Doc
    template_name = 'doc_edit.html'


# Delete view
class DocDelete(DeleteView):
    model = Doc
    success_url = reverse_lazy('doc_list')
    template_name = 'doc_delete.html'

