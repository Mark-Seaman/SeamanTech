# task/views_dt.py
# Project views for basic operations


#############################################################################
# DO NOT EDIT THIS FILE
# This Code will be replaced by the code generator
#############################################################################

from django.views.generic import ListView, DetailView
from django.views.generic.edit import CreateView, UpdateView, DeleteView
from django.core.urlresolvers import reverse_lazy
from django.contrib.auth.decorators import login_required

from project_model import Project
from project_query import query_project, get_project


# Basic list view with using a template
class ProjectList(ListView):
    model = Project
    template_name = 'project_list.html'

    # Filter the list of choices
    queryset = query_project()

    # Use the request user to match the items
    #def get_queryset(self):
    #    return Project.objects.filter(name=self.request.user.username)


# Basic detail view
class ProjectDetail(DetailView):
    model = Project
    template_name = 'project_detail.html'

    # Call the base implementation first to get a context
    def get_context_data(self, **kwargs):
        context = super(ProjectDetail, self).get_context_data(**kwargs)
        id = context['object'].pk
        context['value_list'] = get_project(self.request.user,id)
        return context


# Create view
class ProjectAdd(CreateView):
    model = Project
    template_name = 'project_edit.html'


# Update view
class ProjectEdit(UpdateView):
    model = Project
    template_name = 'project_edit.html'


# Delete view
class ProjectDelete(DeleteView):
    model = Project
    success_url = reverse_lazy('project_list')
    template_name = 'project_delete.html'

