== Best Practice Leverage

{{ image_water }}


[quote, ~ Wikipedia]
____
"A best practice is a method or technique that has consistently shown results 
superior to those achieved with other means, and that is used as a benchmark."
____



=== Developing Best Practices

Best practices must be developed and aren't an automatic byproduct of creating
software. It requires a concerted effort to build and share software processes
throughout the organization. A significant part of an architect's mindshare
should be applied to how you do the development, not just producing the next
product.

Leverage is the best way to control the cost of developing software. However,
the flaws within our organization and our software may block leverage. Technical
debt prevents us from reusing the knowledge that we already have to produce new
products. So how do we escape this dilemma? By developing a standard set of
practices over time. This leaves us free to fully leverage the solutions that
are already proven.

Our primary objective is to produce the maximum amount of software value for the
lowest cost. If software is simply a repeated act of problem solving, then the
cost of the software is related to the number and complexity of the problems
that we choose to solve.


==== Pay Off Technical Debt

With a heavy load of technical debt, each problem that we attempt to solve is
difficult. The remaining defects, missing tests, inappropriate data structures
and interfaces, all work against us. It can become quite difficult to even read
and understand the code. In the extreme cases, it can become virtually
impossible to maintain the code. Have you ever been on a project where there was
no one available with the knowledge of how to modify the code successfully? At
that point the code is no longer maintainable. The cost of maintenance is now
higher than the cost of replacement.

There are techniques that will prevent this situation from occurring and the
same methods can be used for restoring health to bad software. They can be
learned and applied by any developer.

Technical debt is the problem and implementing best practices is the solution.
