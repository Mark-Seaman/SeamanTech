== Planning for Leverage

{{ image_water }}


[quote, Dwight Eisenhower]
____
Plans are nothing; planning is everything.
____


[quote, Louisa May Alcott]
____
I am not afraid of storms for I am learning how to sail my ship.
____


=== Flexible planning

At the start of a software project there is a tremendous risk because so
little is known.  This is point in the project where uncertainty is the highest.
There are unclear goals, customer needs, technical solutions, and tools that
undermine our ability to plan and budget.

At this early stage important decisions can have profound consequences on the
success of the overall project.  A single mistake can sink the project. We must
work to eliminate as much risk as possible as quickly as possible.  We must
perform experiments that yield fundamental understanding that can then be
turned into a stable project plan. But planning without understanding is a 
road to disaster.

We must learn throughout the course of the project. Essential information is
missing at the inception of a new project.  We can guess and make assumptions
but we need to experiment to validate these assumptions. Erik Gries, in Lean
Startup, give a model for how a startup company can experiment to learn more about
the business it is creating.  This also applies to Fortune 500 companies that
need to learn about the new business opportunities being pursued. 

Leverage is also a fundamental part of the project planning.  Leaving leverage
as a afterthought will drastically reduce the amount of reuse that you will get.
Only by explicitly pursuing opportunities to leverage will you be able to 
maximize the development productivity that is possible.  All of this requires
a planning method that is very different than what you may be using today. 


==== Big bang planning

Traditional software projects begin with documenting the project requirements.
Based on these requirements a rigorous project plan is created for a single
large delivery that is either months or even years away.  Let's call this 
