== Architectural Leverage

{{ image_water }}


[quote, ~ Frank Gehry]
____

"Architecture should speak of its time and place, but yearn for timelessness".
____


High quality architecture is the direct result of applying good design
principles and practices to solve the problems at hand. Without a great
architecture you have nothing to leverage. If the old solution barely meets the
needs then it can't be extended to meet a different set of needs.

If you don't trust the current architecture then don't try to leverage off of it
to build something new. You will invest far more time than it is worth, and when
you are done, you will have something that is no better than the first version.

Building systems from a fresh perspective, with the knowledge of the old system,
is far faster than trying to convert an old system into a new one. A system 
that costs 1000 hours to build can be rebuilt from scratch in around 300 hours.
This is because you already have solutions to 70% of the problems you will 
face. Design leverage is often far more powerful than code leverage.

The quality of the software architecture directly depends on the strength of the
interfaces. Design is all about the interfaces between the components. A
reusable architecture has well-encapsulated components and standard interactions
between those components.

A poor architecture has very weak components and lots of complex and custom
interactions between them. A weak architecture doesn't even meet the needs
of its initial use and breaks entirely when you try to extend the business
needs to a second generation solution.


=== Need for Reusable Architecture

Leverage of the design is perhaps the most important kind of reuse that is
possible. Reusing key design elements enables other types of reuse throughout
the life cycle. However, when designs can't be applied to new development,
opportunities to build on other elements are thwarted. When the designs can be
recycled it is quite natural to use the product definition, technology,
implementation components, and tests to the fullest extent.

Maximizing the design leverage is the best way to optimize the overall leverage
of the project. Pay special attention to the way that each generation of project
can be built upon the design of its predecessor. High reuse of the design can
