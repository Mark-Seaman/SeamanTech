If you don't to that think now, you are probably actively avoiding it.
Manual testing atones for future sins, manual testing looks back.
Good engineers solve problems, great ones solve the meta-problems.
Each day is a precious gift, endowed with unique opportunity.
Few jobs are inherently fun; fun is what you bring to it
Use active works in status reports: create, build, review, investigate, fix, deploy, test
While the future is unpredictable, the past is less so.
We don't stop laughing because we grow old, we grow old because we stop laughing.
There are people that use tools and people that make tools
Have the discipline and courage to say 'No'
Care less about finding the shortest path and more about finding an interesting one
How you spend time is the truest reflection of what you value
You optimize whatever you measure
Whatever you measure will automatically improve
A time to play and a time to work
a time to be together and a time to be apart
inhale/exhale, expand/contract
respect the rhythms of life
winter, spring, summer, fall
Create the simplest plan that will actually work
Avoid planning debt, by over or under-planning
Our kids need encouragement, higher expectations, authenticity
Blessed is the person that discovers their reason for living
Repeated actions lead to habits, but intentions do not
Occasionally, run a spelling checker over your entire brain
No skill will be quite right the first time, give it time to grow
Tools do not matter if you cannot wield them
Build only what you need right now
A computer is a device that gives me instant access to my data and scripts
Solitude lets us hear the voice beyond our anxious, pragmatic, and social self
Solitude is where we hear the voice of the Spirit
Convert enemies into friends
Get back to running after encountering a failure
Fix problems at lowest level
My quiet times can be really noisy
Extend reach with each test run
Universally accessible context
What are your biggest regrets?
Count keystrokes
spending time with God is not the same as connected to him
Count seconds to complete a task
Web site for kids to experience God
We are all called to reach the newest generation
Equipping the new generation
Give us eyes to see, willingness to say yes, and courage to go the distance
To master a new work flow, teach a computer to do it.
Computers are for control freaks
I want my way all the time.  Is that too much to ask?
Receiving changes us in a way that giving does not, because it requires humility
Do not be afraid of typing
Go off-road when an existing road will not get you there
People-first God is looking for a God-first people
God multiplies our 'not enough'
Give ideas time to percolate
Before adding a feature, make it easy to do so.
Sarcasm is always the right choice
Failing a task is a problem with: Expectations, Fit, Training, Resources, or Motivation
Failure is a necessary step on the way to success
A trite platitude will fix everything
Create and deliver on commitments
What is good enough for now?
Identify sources of discontent
Contentment,Simplicity, and Generosity
Solve problems now, so they do not need solving later
How do you capture the attention of your readers?
Does asking a question really make people think?
Build up the path that you most often follow
Admit your primary personal issue
Finish a task before starting a new one
Complete a project before starting a new one
Eliminate a task from your list
Focus means protecting your concentration and prioritizing
Keep a top ten list of tasks; this forces prioritization
Everything you do must be reproducible
Context switch destroys focus
Will doing that make my life simpler?
Is that driven by discontent?
Verify small things
Writing is just software run by people, instead of computers
Consider the special needs of over-achievers
The right headline writes the article
Avoid heartache by capturing common sense
Your Ideas can produce the Next Great Invention
Anything over an hour is a project
Better tools make for better thinking
Eat the thistle
Writing is software for humans
Core writing: inception, outline, draft, refinement, sharing
Distraction is a one-way context switch
Defend your attention
What language does your problem speak
Process is a means not an end
Create a custom command for everything you do often
Build the conversation through a series of small steps
Task = Requirement + Set context + Attempt change + Measure result + Simplify + Setup for later
Inhale/Exhale, add complexity/simplify
Development is a fractal pattern
Ideas need a laboratory
Focus on idea triggers
Keep ideas from evaporating: capture, list, and edit them
Test in concentric circles
Capture, list, organize, and develop your ideas
Mentoring phases: Meet, Connect, Understand, Impart
Work activities: Plan, Communicate, Develop, Test
If you get the results you need increase the scope, otherwise, decrease it.
Always build on what works; fix what does not work.
Solve problems directly before creating more indirect solutions.
Concept, Draft, Refine, Share
Limitation on progress: Unknown problems and untested functionality.
Progress is always limited by what you do not know.
Ideas need a laboratory more than a marketing department.
What you do not know affects you the most.
It is better to be mad than uninspired; expose yourself to new ideas.
Setup the right context and the work becomes easy.
If you make a change, always test it.
Automation is essential to productivity and quality.  It is what makes results repeatable.
Cut and paste takes the same time as typing 20 characters.
Never generalize your code until you have created a couple different versions of it.
Get it working completely before you consider how to optimize it.
Every day is a combination of seeking success, leisure, and deeper relationships.
Grab it or lose it.  Many great ideas evaporate in the first minute.
Rules-of-thumb always apply, except when they do not.
Only do things that work, or that you learn from.
Debt = slavery
Short-term memory is limited to 9 items.
Focus on the core idea.
Software is flexible only when it is regularly flexed.
Consider your time as an investment portfolio.
Fresh ideas are worth grabbing before they drift off.
Less is more, except when it is not.
Start small, build continuously.
Assume nothing works.
Go minimal.
Courage to change; peace to accept.
Solve problems for others first.  Then figure out how to profit from it later.
If you really understand something you can make is simple
A paper inbox can be cleared weekly in ten minutes.
Working on one thing at a time is much faster than working on three.
If you have to say three things don't say anything.
Discover what turns someone else on.
It is hard to make a decision when your mind is weighed down.
Eliminate the escape path to increase your motivation dramatically.
Act early and often.
Do more of what works well.
Minimize the time spent on painful activities.
Avoid loud, controlling, and angry people.
Have fewer and higher quality people in your inner circle.
Recognize and cultivate your three closest friends.  Don't hold back anything.
Pass on whatever wisdom you have.
Recognize truth, especially when it hurts.
Set up easy ways to communicate with groups of people.
Learn something from everything you do.
What was the most important lesson that you learned in the last three days?
Most people use 1.5 communication channels.  I use email and phone calls. Other methods are unreliable.
Unfortunately not everyone uses the same communication channels .  
Communication is reliable only when using the preferred method.  
Weight loss can result by cutting off your foot, but afterward you will not win any races.
I do not need another in-box. Please use one I already check.
How many in-boxes do you have? Every service I use wants to add one more to my list. 
In a war, taking out the leader and destroying communication wins the battle. Think about that one!
Creating a message and sharing it with others is best done as two separate tasks. 
What one lesson would you most like to teach everyone you meet?
My work has four primary components: Learn, Plan, Invent, Teach
Use Twitter for passing on proverbs.
Twitter is a great way to discover new web sites.
Stumble Upon constantly surprises me with cool stuff.
When do you get your most life-changing ideas?
Most ideas are lost in the first fifteen seconds. How do you avoid this happening to you?
Carry paper and a small pen with you at all times.  When inspiration strikes, strike it back!
It is time for Dr. Prof to come out of hiding.
Do something today that will matter to you one year from now!
Every great business book contributes a unique core idea. 
Collect ideas like baseball cards and trade them with your friends.
My life philosophy is to have fun while helping others.
Engineers will be unemployed once we finish inventing everything.
Your work skills are the most valuable asset you posses.
Books on success require you to start by being the author.
What works for one person will not for someone else.
Do not force me into your way of thinking.  Let me discover my own path.
It is the natural order for teens to rebel and parents to control. But love gets you through.
A great idea is worth dressing up and taking out.
A short message packs more punch than a long one.
We live in a world of tweets, keep it short.
Write the core message first, then discard the rest.
Invest more in your best friends.
Figure out what keeps you coming back for more.  Go for more of that.
Do not blow off the gentle prompting.
When life gets hard, use a lower gear.
When you cannot see, take smaller steps, not wild leaps.
Constantly work to set expectations and avoid misunderstandings.
If you are the best in the band, then you need a new band.
Buy the lowest value house in the neighborhood.
Ask a true friend about your strengths and weaknesses.
Do what you can, where you are, with what you have.  That is success.
Only use version control for things that you don't want to lose.
Only backup things that you don't want to lose.
If your computer dies right now, what did you just lose.
Tell better stories.
Diffuse conflict like a ticking bomb.
Use the tool for its intended purpose.
Follow up on the adjacent possible.
Make the most of the opportunity at hand.
Act quickly with means at hand.
Act in order to learn.
Double the complexity in order to quadruple the risk.
If you tell people too much they stop listening.
Make constant small corrections.
The bigger the bullet, the slower the muzzle velocity.
Build for the short term, but plan for the long term.
Not finishing a task is like writing an IOU on your future time.
Test your code every ten minutes.
Shorten your "try it/fix it" loop. Aim for 5 seconds.
Maximize density of expression in code.
Optimize code readability.
Minimize keystrokes.
Frequent contexts switches should be invoked by a single action.
Information should always be stored in text format.
Find a power text editor and master it.  Use the same editor everywhere.
Emacs is more than an editor; it is a complete computer control interface.
Finish a project before starting a new one.
Make it good enough.
The usefulness of a list decreases with length.
Don't repeat items in multiple lists.
Reduce the number of in-boxes.
A broken tool is worse than no tool.
Find peace by letting go of judging, controlling, and being right.
Love should be intentional, intensive, and incidental.
It's hard to savor life when you are speeding through it.
Eliminate distractions in order to concentrate.
One good choice is better than three which is better than ten.
Constraining choices decreases the burden of making decisions.
Everything should be a simple as possible but not simpler.
Become a tool maker.
Knowledge is better in a script than in your head.
Cleanup is not a task; it's a mindset.
What are you attempting to master today?
Where do you need more autonomy and how can you get it?
Purpose comes from doing what you are created for.
Your brain is a lousy storage device.
If every shot you take is a slam dunk then your basket is too low.
Never rely on memory; instead verify against reality. You will be constantly recalibrated.
Abstraction allows you to think about the desired goal rather than the implementation details.
Solve the meta-problem. After all it is the cause of the original problem you wish to solve.
Never short-circuit testing.
To err is human; for reliability automate.
Write in the imperative, present-tense, and second person.
Tell the computer what you want, rather than asking what you can do.
Commit only to changes that you expect to stick with for the rest of your life.
Master your domain of knowledge.  Become the best in the world in some area.
Keep a list of things you are grateful for.  Try to add an item each day.
Keep a list of one-liners.  Try to add to it each day.
When you are having a "wise moment" capture it; you will probably need the advice later
Catch yourself doing "approach/avoidance behavior" and ask why you are doing it
Flexibility is more important than trying to predict each possible outcome
You possess true wisdom, when you can pack it in a Twitter post
Relationship killers: Selfishness, Pride, Insecurity, Unforgiven
Give more than others expect; it is a great surprise
Work is like a drug for the Workaholic: the more you do the more you need
Calculate the savings from each improvement you make
Use a communication method that works for the person
Influence is the ability to shape values
Earned respect = Integrity + Humility + Dependability + Generosity + Spirituality
Great writing employs the art of the tease
Lead readers to anticipate the eminent revelation
Write for the best of your audience
Write for yourself as if you didn't know the subject
Drive = Biological need + Reward/Punishment + Desire for Mastery
Morning Routine (sync, versions, actions, mills, email, build)
It is easier to avoid hiring someone than to let them go
It is better to wait for the right person for a job, than get someone that is wrong
software development speed = test config + process + tech tricks + domain knowledge
fixing problems: What happened?, How did this happen?, Find fix, Assess future
work = tools + structure + test/fix + new features
work life cycle = investigate + create + validate + optimize
Do things to enhance concentration
instinct is the highest form of thinking
Develop the appropriate automatic responses
Put your subconscious to work for you
Shift tasks from conscious to subconscious level
Remove distractions.  Find one thing that steals your time and kill it!
Develop a morning routine to start your day
High anticipation/low expectation
Slow down to move faster
Flat is better than nested
Selection lists should be limited to seven items at any one moment
Did yesterday truly count?
Deploy software early with limited functionality
Create a simple plan and get moving
Create automatic testing at the beginning of a project
Document computer setup as you do it
You don't know it until you have a recipe
Let it go; you will live longer
Send a Twitter a day
Savor life
Share what you know
Break everything into four parts
Write a little every day
Say it with software
Don't ignore issues that will grow with time
Postponing a task is like taking out a loan
Travel light
Choose gratitude over fear
Simpler is better
Development proceeds at the speed of testing
Complexity must be justified
Type fewer characters to improve productivity
Use search instead of browse
Expensive does not always mean better
Inexpensive is not always better
Plan to do one thing right
Relax and savor life
How is your disk space?
Get rid of something you don't use
Stop planning and start doing
Always treat people with respect
Select a tool to fit the job
Consult your action list constantly
Pick an easy item on your action list and do it now
Run full screen to avoid distraction
Start every task with a single word on the command line 
Create simple reminders that you naturally will encounter
Automate everything you do often
Express gratitude
Do a random kindness
Never lose hope.
Loss offers opportunity for growth.
Pride ruins everything.
You will never be happy if you can't be happy now.
Everything is temporary; treat it as such.
There will always be people better than you.
Everything we have comes from God.
Find one or two lifelong friends.
Think first about how you can meet a need for someone else.
Some problems can be easily fixed; others can not be.
Trust brings peace.
Turmoil may indicate that God is at work.
Make the most of the unique opportunities you have been given.
You can't meet everyone's expectations.
Look for God's blessing each day.
My plan may not be God's plan; His is better.
Don't compromise of values.
Track down an old friend.
Set goals for where you want to be in five years.
Embrace brokenness.
We face only one real decision ... whether to follow God.
Everything comes to light, eventually.
Never repeat 
Solve problems once
Run to completion
Delay work until it is required
Use the keyboard over the mouse
Learn the tools
Find how others have solved problems
Eliminate waiting
Break down every task until each step is easy
Eliminate productivity sinks
Use lightweight processes 
Prioritize
Don't worry be happy
What is the best thing to happen to you recently?
What is the worst experience you have had recently?
Create a little bit of order each day
Stop working so much!
Don't procrastinate!
Spend two hours on finances each week
Always choose simple over complex
There is no bonus for doing unneeded work
Create more value for others
Communicate the value you are creating
Computers should be fun
Automate now to save effort later
Have one master copy of every file
Backups should be always up to date
Minimize the number of file sets for file management
Experiment, Build, Test, Refine
Automate daily start-up activities and reminders through a script
Never ignore broken things
Change one thing at a time
Create a two-minute plan
After you get it working, make it simpler
Don't fix problems you can avoid
True security only comes from God
Resist corruption in small increments
Avoid distractions
Prevent addictions
Maximize long-term gain
Measure income by $/hour working (and getting ready to work)
Build relationships that you may need later
Learn a new productivity trick each day
Keep a record of what you learn
Anything worth doing, is worth doing more simply
What are you waiting for?
Think more and type less... a lot less
Use fewer words
Fix old problems before creating new ones
Have one inbox
Keep your inbox empty
Have one to-do list
If it happened once, it will happen again.
If it is worth doing, it is worth doing poorly.
Act sooner, but act smaller.
Say every action in less that 7 characters
A library is a warehouse for ideas.
Fixing a problem requires both getting it running and understanding the failure.
Beware of the expectations ratchet.
I have more than I need, but less than I want.
A short list is useful but a long one is not.
Every action should be followed by a confirmation that it worked.
Connect with one person today.
Watch your thoughts, they become action...habits...character...destiny
Incorporate more artwork into your web sites
Offer advice freely, but do not control others
Inherent complexity/needless complexity
dream big but act simply
Never confuse planning with doing
Now is the only time when you can choose
Maintain a to-do list for each context
Limit each to-do list to 21 items
Always empty the inbox
agility means doing important things quickly
agility means avoiding less important things
You can do anything you want to, but not everything
Organic writing is incremental
Work in 1 hour bursts with a goal
Evaluate tasks: Keep, Increase, Start, Stop
